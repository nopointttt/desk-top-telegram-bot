# –§–∞–π–ª: C:\desk_top\src\bot.py
import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Update, BotCommand
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.client.default import DefaultBotProperties
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from src.config import TELEGRAM_TOKEN
from src.handlers import general, session as session_handlers, personalization, data_management
from src.db.session import db
from src.db.repository import SessionRepository
from src.services.llm_client import LLMClient
from src.services.rag_client import RAGClient

async def db_session_middleware(handler, event: Update, data: dict):
    async with db.AsyncSessionLocal() as session:
        data['session'] = session
        return await handler(event, data)

async def scheduled_cleanup(session_maker):
    async with session_maker() as session:
        repo = SessionRepository(session)
        await repo.delete_old_sessions()

# --- –ù–û–í–´–ô –ö–û–î: –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ ---
async def set_main_menu(bot: Bot):
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.
    """
    main_menu_commands = [
        BotCommand(command='/start', description='‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'),
        BotCommand(command='/personalize', description='üë§ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–≥–µ–Ω—Ç–∞'),
        BotCommand(command='/start_session', description='üöÄ –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é'),
        BotCommand(command='/end_session', description='üõë –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é'),
        BotCommand(command='/list_sessions', description='üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Å—Å–∏–π'),
        BotCommand(command='/export_data', description='üì• –°–∫–∞—á–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ'),
        BotCommand(command='/delete_my_data', description='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ')
    ]
    await bot.set_my_commands(main_menu_commands)
# --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê ---

async def main():
    bot = Bot(token=TELEGRAM_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
    
    llm_client = LLMClient()
    rag_client = RAGClient()
    await rag_client.initialize()
    dp = Dispatcher(llm_client=llm_client, rag_client=rag_client)

    dp.update.middleware(db_session_middleware)
    
    dp.include_router(general.router)
    dp.include_router(personalization.router)
    dp.include_router(data_management.router)
    dp.include_router(session_handlers.router)

    # --- –ù–û–í–´–ô –ö–û–î: –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–µ–Ω—é ---
    await set_main_menu(bot)
    # --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê ---

    scheduler = AsyncIOScheduler(timezone="Europe/Moscow")
    scheduler.add_job(scheduled_cleanup, trigger='interval', days=1, kwargs={'session_maker': db.AsyncSessionLocal})
    scheduler.start()

    logging.info("Starting bot...")
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    finally:
        await bot.session.close()
        logging.info("Bot stopped.")